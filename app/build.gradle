apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }

    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/drummer-aidan/maven" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

apply plugin: 'io.fabric'

//def increaseVersionCode() {
//    gradle.taskGraph.whenReady { taskGraph ->
//        if (taskGraph.hasTask(assembleHockeyDebug)) {
//            incrementBuildNumber()
//        }
//    }
//}

android {
    // FIXME: When using this method, version code is increase 1 after generate apk
    //increaseVersionCode()

    buildToolsVersion '28.0.2'
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.ping.android"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode readBuildCode()
        versionName readVersionName()
        multiDexEnabled true
    }
    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('./bzzz-android-key')
            storePassword '123456'
        }
    }
    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
        }
    }
//    flavorDimensions "version"
//    productFlavors {
//        dev {
//            dimension "version"
//        }
//        hockey {
//            dimension "version"
//        }
//        production {
//            dimension "version"
//        }
//    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        javaMaxHeapSize '3072m'
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def file = output.outputFile
            def fileName = file.name.replace(".apk", "-v" + versionName + "(" + versionCode + ").apk")
            outputFileName = fileName
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    aaptOptions {
        // Use ffmpeg inside javacv, so we exclude them all from nl.bravobit:android-ffmpeg
        ignoreAssetsPattern "!ffprobe:"
    }
//    packagingOptions {
//        pickFirst 'lib/armeabi-v7a/libavcodec.so'
//        pickFirst 'lib/armeabi-v7a/libavformat.so'
//        pickFirst 'lib/armeabi-v7a/libavutil.so'
//        pickFirst 'lib/armeabi-v7a/libswscale.so'
//        pickFirst 'lib/armeabi-v7a/libswresample.so'
//
//        pickFirst 'lib/x86/libavcodec.so'
//        pickFirst 'lib/x86/libavformat.so'
//        pickFirst 'lib/x86/libavutil.so'
//        pickFirst 'lib/x86/libswscale.so'
//        pickFirst 'lib/x86/libswresample.so'
//
//
//    }

    // Quickblox SDK
    //There is code for excluding some native libs (it useful if you need reduce apk size and want
    //build apk only for specific platform). This method allows you to achieve savings about 10MB
    //of apk's size (but you need build 4 different apks).
//    packagingOptions {
//        exclude '**/armeabi-v7a/libjingle_peerconnection_so.so'
//        exclude '**/arm64-v8a/libjingle_peerconnection_so.so'
//        exclude '**/x86_64/libjingle_peerconnection_so.so'
//        exclude '**/x86/libjingle_peerconnection_so.so'
//    }
}

kapt {
    generateStubs = true
}

def libraries = rootProject.ext.libraries
def dbflow_version = "4.2.4"

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation(project(':configuration')) {
        exclude group: 'com.github.bumptech.glide'
    }
    implementation project(path: ':flexibleadapter')
    implementation project(path: ':extensions')
    implementation project(path: ':videorecorder')
    implementation(project(path: ':rxfirebase')) {
        exclude group: 'com.google.firebase'
    }
    implementation project(path: ':rxquickblox')

    //SUPPORT ANDROID
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.core:core-ktx:1.0.0'

    // AUTH

    implementation "com.google.android.gms:play-services-gcm:16.0.0"
    implementation("com.google.android.gms:play-services-basement:16.1.0")

    implementation "com.google.firebase:firebase-core:${libraries.firebase}"
    implementation "com.google.firebase:firebase-auth:${libraries.firebase_auth}"
    implementation "com.google.firebase:firebase-messaging:${libraries.firebase_messaging}"
    implementation "com.google.firebase:firebase-database:${libraries.firebase_database}"
    implementation "com.google.firebase:firebase-storage:${libraries.firebase_storage}"

    implementation('com.firebaseui:firebase-ui-storage:4.0.1') {
        exclude group: 'com.android.support'
        exclude group: 'com.github.bumptech.glide'
        exclude group: 'com.google.firebase:'
    }
    implementation "com.google.firebase:firebase-config:${libraries.firebase_config}"

    //ShortcutBadger
    implementation 'me.leolin:ShortcutBadger:1.1.21@aar'
    implementation("com.quickblox:quickblox-android-sdk-messages:$rootProject.qbSdkVersion") {
        exclude group: 'com.google.android.gms', module: 'play-services-gcm'
        exclude group: 'com.google.firebase'
        exclude group: 'com.android.support'
    }
    implementation "com.quickblox:quickblox-android-sdk-videochat-webrtc:$rootProject.qbSdkVersion"
    implementation('com.hbb20:ccp:1.7.6') {
        exclude group: 'com.android.support'
    }
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true
    }
    implementation 'com.github.ybq:Android-SpinKit:1.1.0'

    //Emoji
    implementation('com.vanniktech:emoji-google:0.6.0-SNAPSHOT') {
        exclude group: 'com.android.support'
    }
    implementation("com.github.bumptech.glide:glide:${libraries.glide}") {
        transitive = true
    }
    kapt "com.github.bumptech.glide:compiler:${libraries.glide}"
    implementation('jp.wasabeef:glide-transformations:3.0.1') {
        exclude group: 'com.github.bumptech.glide'
    }
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation('com.otaliastudios:cameraview:1.4.1') {
        exclude group: 'com.android.support'
    }
    implementation('com.theartofdev.edmodo:android-image-cropper:2.6.0') {
        exclude group: 'com.android.support'
    }
    implementation('com.jakewharton.rxbinding2:rxbinding:2.1.1') {
        exclude group: 'io.reactivex.rxjava2'
    }
    implementation('com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.1') {
        exclude group: 'io.reactivex.rxjava2'
        exclude group: 'com.android.support'
        exclude group: 'com.jakewharton.rxbinding2'
    }
    implementation "io.reactivex.rxjava2:rxandroid:${libraries.rx_android}"
    implementation "io.reactivex.rxjava2:rxjava:${libraries.rx_java}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.google.dagger:dagger:${libraries.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libraries.dagger}"
    implementation "com.google.dagger:dagger-android:${libraries.dagger}"
    implementation "com.google.dagger:dagger-android-support:${libraries.dagger}"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:${libraries.dagger}"

    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
    //implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflow_version}@aar"
    implementation "com.github.Raizlabs.DBFlow:dbflow-rx2:${dbflow_version}"

    implementation 'com.github.chrisbanes:PhotoView:2.1.4'

    implementation 'com.cleveroad:audiovisualization:1.0.0'
    implementation 'nl.bravobit:android-ffmpeg:1.1.2'

//    implementation group: 'org.bytedeco', name: 'javacv', version: '1.4.2'
//    implementation group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2', classifier: 'android-arm'
//    implementation group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.4.2-1.4.2', classifier: 'android-x86'
//    implementation group: 'org.bytedeco.javacpp-presets', name: 'ffmpeg', version: '4.0.1-1.4.2', classifier: 'android-arm'
//    implementation group: 'org.bytedeco.javacpp-presets', name: 'ffmpeg', version: '4.0.1-1.4.2', classifier: 'android-x86'

    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
//    // Optional, if you use support library fragments:
//    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'

//    Design support library
    implementation "com.android.support:design:28.0.0"
    implementation 'com.android.support:appcompat-v7:28.0.0'


}

apply plugin: 'com.google.gms.google-services'
